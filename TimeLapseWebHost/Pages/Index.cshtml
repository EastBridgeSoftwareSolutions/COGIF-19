@page
@model IndexModel
@inject IFileStore _fileStore
@{
    ViewData["Title"] = "Home page";
}

    <div>
        <h1 class="display-4">Welcome</h1>
        @{
            if (User.Identity.IsAuthenticated)
            {

                if (await _fileStore.UserHasGif(User))
                {
                    <img src=@_fileStore.GetResourceWithSas(User,"MyTimelapse.gif").AbsoluteUri ) />
                    <button id="btnClear">Start over</button>
                }


                <video id="video" class="video" width="640" height="480" autoplay></video>
                <button id="snap">Snap Photo</button>
                <canvas id="canvas" width="640" height="480"></canvas>
                <button id="btnSave">Save Photo</button>
            }
        }
    </div>

@section Scripts
{
    <script>
        var video = document.getElementById('video');

        // Get access to the camera!
        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
            // Not adding `{ audio: true }` since we only want video now
            navigator.mediaDevices.getUserMedia({ video: true }).then(function (stream) {
                video.srcObject = stream;
                video.play();
            });
        }

        // Elements for taking the snapshot
        var canvas = document.getElementById('canvas');
        var context = canvas.getContext('2d');

        document.getElementById("snap").addEventListener("click", function () {
            context.drawImage(video, 0, 0, 640, 480);
        });

        document.getElementById("btnSave").addEventListener("click", function () {
            canvas.toBlob(function (blob) {
                const formData = new FormData();
                formData.append('UploadedFile', blob, 'UploadedFile.png');

                fetch('', {
                    method: 'post',
                    body: formData,
                }).then(() => location.reload())
            });
        });

        document.getElementById("btnClear").addEventListener("click", function () {
            fetch('', {
                method: 'delete'
            }).then(() => {
                location.reload();
            })
        });

    </script>
}