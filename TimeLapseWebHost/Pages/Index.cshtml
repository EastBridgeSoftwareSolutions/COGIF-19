@page
@model IndexModel
@inject IFileStore _fileStore
@{
    ViewData["Title"] = "Home page";
}

<div>
    <h1 class="display-4">Welcome</h1>
    @{
        if (User.Identity.IsAuthenticated)
        {
            
            if (_fileStore.UserHasGif(User))
            {
                <img src="@(_fileStore.GetRelativeGifPath(User))" />
            }
            
            <video id="video" width="640" height="480" autoplay></video>
            <button id="snap" class="btn btn-secondary">Snap Photo</button>
            <canvas id="canvas" width="640" height="480"></canvas>
            <button id="btnSave" class="btn btn-primary" style="display:none;">Save Photo</button>
        }
    }
</div>

@section Scripts
{
    <script>
        const video = document.getElementById('video'),
            canvas = document.getElementById('canvas'),
            context = canvas.getContext('2d'),
            snap = document.getElementById("snap"),
            save = document.getElementById("btnSave");

        // Get access to the camera!
        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
            // Not adding `{ audio: true }` since we only want video now
            navigator.mediaDevices.getUserMedia({ video: true }).then(function (stream) {
                video.srcObject = stream;
                video.play();
            });
        }


        snap.addEventListener("click", function () {
            context.drawImage(video, 0, 0, 640, 480);
            save.style.display = 'inline-block';
        });

        save.addEventListener("click", function () {
            canvas.toBlob(function (blob) {
                const formData = new FormData();
                formData.append('UploadedFile', blob, 'UploadedFile.png');

                fetch('', {
                    method: 'post',
                    body: formData,
                }).then(() => location.reload())
            });
        });

    </script>
}